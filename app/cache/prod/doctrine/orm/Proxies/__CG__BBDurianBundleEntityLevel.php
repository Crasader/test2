<?php

namespace Proxies\__CG__\BB\DurianBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Level extends \BB\DurianBundle\Entity\Level implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'id', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'domain', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'alias', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'orderStrategy', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'orderId', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'createdAtStart', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'createdAtEnd', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'depositCount', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'depositTotal', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'depositMax', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'withdrawCount', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'withdrawTotal', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'userCount', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'memo', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'version');
        }

        return array('__isInitialized__', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'id', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'domain', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'alias', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'orderStrategy', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'orderId', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'createdAtStart', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'createdAtEnd', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'depositCount', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'depositTotal', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'depositMax', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'withdrawCount', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'withdrawTotal', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'userCount', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'memo', '' . "\0" . 'BB\\DurianBundle\\Entity\\Level' . "\0" . 'version');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Level $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getDomain()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDomain', array());

        return parent::getDomain();
    }

    /**
     * {@inheritDoc}
     */
    public function getAlias()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlias', array());

        return parent::getAlias();
    }

    /**
     * {@inheritDoc}
     */
    public function setAlias($alias)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAlias', array($alias));

        return parent::setAlias($alias);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderStrategy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderStrategy', array());

        return parent::getOrderStrategy();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderStrategy($strategy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderStrategy', array($strategy));

        return parent::setOrderStrategy($strategy);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderId', array());

        return parent::getOrderId();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderId($orderId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderId', array($orderId));

        return parent::setOrderId($orderId);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAtStart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAtStart', array());

        return parent::getCreatedAtStart();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAtStart($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAtStart', array($date));

        return parent::setCreatedAtStart($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAtEnd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAtEnd', array());

        return parent::getCreatedAtEnd();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAtEnd($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAtEnd', array($date));

        return parent::setCreatedAtEnd($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDepositCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepositCount', array());

        return parent::getDepositCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setDepositCount($depositCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDepositCount', array($depositCount));

        return parent::setDepositCount($depositCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getDepositTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepositTotal', array());

        return parent::getDepositTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function setDepositTotal($depositTotal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDepositTotal', array($depositTotal));

        return parent::setDepositTotal($depositTotal);
    }

    /**
     * {@inheritDoc}
     */
    public function getDepositMax()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepositMax', array());

        return parent::getDepositMax();
    }

    /**
     * {@inheritDoc}
     */
    public function setDepositMax($depositMax)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDepositMax', array($depositMax));

        return parent::setDepositMax($depositMax);
    }

    /**
     * {@inheritDoc}
     */
    public function getWithdrawCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWithdrawCount', array());

        return parent::getWithdrawCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setWithdrawCount($withdrawCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWithdrawCount', array($withdrawCount));

        return parent::setWithdrawCount($withdrawCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getWithdrawTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWithdrawTotal', array());

        return parent::getWithdrawTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function setWithdrawTotal($withdrawTotal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWithdrawTotal', array($withdrawTotal));

        return parent::setWithdrawTotal($withdrawTotal);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserCount', array());

        return parent::getUserCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserCount($userCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserCount', array($userCount));

        return parent::setUserCount($userCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getMemo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMemo', array());

        return parent::getMemo();
    }

    /**
     * {@inheritDoc}
     */
    public function setMemo($memo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMemo', array($memo));

        return parent::setMemo($memo);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersion', array());

        return parent::getVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array());

        return parent::toArray();
    }

}
