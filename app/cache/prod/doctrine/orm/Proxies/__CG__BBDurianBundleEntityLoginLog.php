<?php

namespace Proxies\__CG__\BB\DurianBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class LoginLog extends \BB\DurianBundle\Entity\LoginLog implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'id', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'userId', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'username', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'role', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'sub', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'entrance', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'domain', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'ip', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'ipv6', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'host', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'at', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'result', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'sessionId', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'language', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'clientOs', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'clientBrowser', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'ingress', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'proxy1', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'proxy2', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'proxy3', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'proxy4', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'country', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'city', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'isOtp', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'isSlide', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'test');
        }

        return array('__isInitialized__', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'id', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'userId', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'username', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'role', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'sub', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'entrance', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'domain', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'ip', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'ipv6', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'host', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'at', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'result', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'sessionId', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'language', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'clientOs', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'clientBrowser', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'ingress', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'proxy1', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'proxy2', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'proxy3', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'proxy4', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'country', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'city', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'isOtp', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'isSlide', '' . "\0" . 'BB\\DurianBundle\\Entity\\LoginLog' . "\0" . 'test');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (LoginLog $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserId', array($id));

        return parent::setUserId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserId', array());

        return parent::getUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function getIP()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIP', array());

        return parent::getIP();
    }

    /**
     * {@inheritDoc}
     */
    public function getDomain()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDomain', array());

        return parent::getDomain();
    }

    /**
     * {@inheritDoc}
     */
    public function getResult()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResult', array());

        return parent::getResult();
    }

    /**
     * {@inheritDoc}
     */
    public function getAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAt', array());

        return parent::getAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setAt($at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAt', array($at));

        return parent::setAt($at);
    }

    /**
     * {@inheritDoc}
     */
    public function setSessionId($sessionId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSessionId', array($sessionId));

        return parent::setSessionId($sessionId);
    }

    /**
     * {@inheritDoc}
     */
    public function getSessionId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSessionId', array());

        return parent::getSessionId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRole', array($role));

        return parent::setRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getRole()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRole', array());

        return parent::getRole();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntrance($entrance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntrance', array($entrance));

        return parent::setEntrance($entrance);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntrance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntrance', array());

        return parent::getEntrance();
    }

    /**
     * {@inheritDoc}
     */
    public function setHost($host)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHost', array($host));

        return parent::setHost($host);
    }

    /**
     * {@inheritDoc}
     */
    public function getHost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHost', array());

        return parent::getHost();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', array($username));

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', array());

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguage($language)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguage', array($language));

        return parent::setLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguage', array());

        return parent::getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function setIpv6($ipv6)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIpv6', array($ipv6));

        return parent::setIpv6($ipv6);
    }

    /**
     * {@inheritDoc}
     */
    public function getIpv6()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIpv6', array());

        return parent::getIpv6();
    }

    /**
     * {@inheritDoc}
     */
    public function setClientOs($clientOs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClientOs', array($clientOs));

        return parent::setClientOs($clientOs);
    }

    /**
     * {@inheritDoc}
     */
    public function getClientOs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientOs', array());

        return parent::getClientOs();
    }

    /**
     * {@inheritDoc}
     */
    public function setClientBrowser($clientBrowser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClientBrowser', array($clientBrowser));

        return parent::setClientBrowser($clientBrowser);
    }

    /**
     * {@inheritDoc}
     */
    public function getClientBrowser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientBrowser', array());

        return parent::getClientBrowser();
    }

    /**
     * {@inheritDoc}
     */
    public function setIngress($ingress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIngress', array($ingress));

        return parent::setIngress($ingress);
    }

    /**
     * {@inheritDoc}
     */
    public function getIngress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIngress', array());

        return parent::getIngress();
    }

    /**
     * {@inheritDoc}
     */
    public function setProxy1($proxy1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProxy1', array($proxy1));

        return parent::setProxy1($proxy1);
    }

    /**
     * {@inheritDoc}
     */
    public function getProxy1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProxy1', array());

        return parent::getProxy1();
    }

    /**
     * {@inheritDoc}
     */
    public function setProxy2($proxy2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProxy2', array($proxy2));

        return parent::setProxy2($proxy2);
    }

    /**
     * {@inheritDoc}
     */
    public function getProxy2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProxy2', array());

        return parent::getProxy2();
    }

    /**
     * {@inheritDoc}
     */
    public function setProxy3($proxy3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProxy3', array($proxy3));

        return parent::setProxy3($proxy3);
    }

    /**
     * {@inheritDoc}
     */
    public function getProxy3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProxy3', array());

        return parent::getProxy3();
    }

    /**
     * {@inheritDoc}
     */
    public function setProxy4($proxy4)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProxy4', array($proxy4));

        return parent::setProxy4($proxy4);
    }

    /**
     * {@inheritDoc}
     */
    public function getProxy4()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProxy4', array());

        return parent::getProxy4();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry($country)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', array($country));

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', array());

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity($city)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', array($city));

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', array());

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function isSub()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSub', array());

        return parent::isSub();
    }

    /**
     * {@inheritDoc}
     */
    public function setSub($bool)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSub', array($bool));

        return parent::setSub($bool);
    }

    /**
     * {@inheritDoc}
     */
    public function isOtp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isOtp', array());

        return parent::isOtp();
    }

    /**
     * {@inheritDoc}
     */
    public function setOtp($bool)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOtp', array($bool));

        return parent::setOtp($bool);
    }

    /**
     * {@inheritDoc}
     */
    public function isSlide()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSlide', array());

        return parent::isSlide();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlide($bool)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlide', array($bool));

        return parent::setSlide($bool);
    }

    /**
     * {@inheritDoc}
     */
    public function isTest()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isTest', array());

        return parent::isTest();
    }

    /**
     * {@inheritDoc}
     */
    public function setTest($bool)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTest', array($bool));

        return parent::setTest($bool);
    }

    /**
     * {@inheritDoc}
     */
    public function getInfo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInfo', array());

        return parent::getInfo();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array());

        return parent::toArray();
    }

}
