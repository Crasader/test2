<?php

namespace Proxies\__CG__\BB\DurianBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Credit extends \BB\DurianBundle\Entity\Credit implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'BB\\DurianBundle\\Entity\\Credit' . "\0" . 'id', '' . "\0" . 'BB\\DurianBundle\\Entity\\Credit' . "\0" . 'user', '' . "\0" . 'BB\\DurianBundle\\Entity\\Credit' . "\0" . 'groupNum', '' . "\0" . 'BB\\DurianBundle\\Entity\\Credit' . "\0" . 'enable', '' . "\0" . 'BB\\DurianBundle\\Entity\\Credit' . "\0" . 'line', '' . "\0" . 'BB\\DurianBundle\\Entity\\Credit' . "\0" . 'totalLine', '' . "\0" . 'BB\\DurianBundle\\Entity\\Credit' . "\0" . 'lastEntryAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\Credit' . "\0" . 'version', '' . "\0" . 'BB\\DurianBundle\\Entity\\Credit' . "\0" . 'creditPeriod');
        }

        return array('__isInitialized__', '' . "\0" . 'BB\\DurianBundle\\Entity\\Credit' . "\0" . 'id', '' . "\0" . 'BB\\DurianBundle\\Entity\\Credit' . "\0" . 'user', '' . "\0" . 'BB\\DurianBundle\\Entity\\Credit' . "\0" . 'groupNum', '' . "\0" . 'BB\\DurianBundle\\Entity\\Credit' . "\0" . 'enable', '' . "\0" . 'BB\\DurianBundle\\Entity\\Credit' . "\0" . 'line', '' . "\0" . 'BB\\DurianBundle\\Entity\\Credit' . "\0" . 'totalLine', '' . "\0" . 'BB\\DurianBundle\\Entity\\Credit' . "\0" . 'lastEntryAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\Credit' . "\0" . 'version', '' . "\0" . 'BB\\DurianBundle\\Entity\\Credit' . "\0" . 'creditPeriod');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Credit $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setId(\BB\DurianBundle\Entity\RemovedCredit $removedCredit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($removedCredit));

        return parent::setId($removedCredit);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnable', array());

        return parent::isEnable();
    }

    /**
     * {@inheritDoc}
     */
    public function disable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'disable', array());

        return parent::disable();
    }

    /**
     * {@inheritDoc}
     */
    public function enable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'enable', array());

        return parent::enable();
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalLine()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalLine', array());

        return parent::getTotalLine();
    }

    /**
     * {@inheritDoc}
     */
    public function setLine($amount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLine', array($amount));

        return parent::setLine($amount);
    }

    /**
     * {@inheritDoc}
     */
    public function getLine()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLine', array());

        return parent::getLine();
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupNum()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupNum', array());

        return parent::getGroupNum();
    }

    /**
     * {@inheritDoc}
     */
    public function addPeriod($period)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPeriod', array($period));

        return parent::addPeriod($period);
    }

    /**
     * {@inheritDoc}
     */
    public function getPeriods()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPeriods', array());

        return parent::getPeriods();
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', array());

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function getBalance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBalance', array());

        return parent::getBalance();
    }

    /**
     * {@inheritDoc}
     */
    public function getBalanceAt(\DateTime $date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBalanceAt', array($date));

        return parent::getBalanceAt($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersion', array());

        return parent::getVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastEntryAt($lastEntryAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastEntryAt', array($lastEntryAt));

        return parent::setLastEntryAt($lastEntryAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastEntryAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastEntryAt', array());

        return parent::getLastEntryAt();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array());

        return parent::toArray();
    }

}
