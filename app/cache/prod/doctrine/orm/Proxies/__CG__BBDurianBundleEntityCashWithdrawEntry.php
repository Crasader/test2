<?php

namespace Proxies\__CG__\BB\DurianBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CashWithdrawEntry extends \BB\DurianBundle\Entity\CashWithdrawEntry implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'id', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'at', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'cashId', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'confirmAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'domain', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'userId', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'first', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'detailModified', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'autoWithdraw', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'currency', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'status', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'levelId', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'merchantWithdrawId', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'previousId', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'entryId', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'amount', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'fee', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'aduitFee', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'aduitCharge', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'deduction', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'realAmount', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'paymentGatewayFee', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'autoWithdrawAmount', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'rate', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'createdAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'telephone', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'ip', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'checkedUsername', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'account', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'branch', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'nameReal', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'accountHolder', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'province', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'city', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'refId', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'bankName', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'memo', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'note', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'version');
        }

        return array('__isInitialized__', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'id', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'at', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'cashId', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'confirmAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'domain', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'userId', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'first', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'detailModified', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'autoWithdraw', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'currency', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'status', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'levelId', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'merchantWithdrawId', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'previousId', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'entryId', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'amount', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'fee', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'aduitFee', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'aduitCharge', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'deduction', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'realAmount', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'paymentGatewayFee', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'autoWithdrawAmount', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'rate', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'createdAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'telephone', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'ip', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'checkedUsername', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'account', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'branch', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'nameReal', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'accountHolder', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'province', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'city', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'refId', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'bankName', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'memo', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'note', '' . "\0" . 'BB\\DurianBundle\\Entity\\CashWithdrawEntry' . "\0" . 'version');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CashWithdrawEntry $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAt', array());

        return parent::getAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getCashId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCashId', array());

        return parent::getCashId();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirmAt(\DateTime $confirmAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirmAt', array($confirmAt));

        return parent::setConfirmAt($confirmAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirmAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirmAt', array());

        return parent::getConfirmAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setDomain($domain)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDomain', array($domain));

        return parent::setDomain($domain);
    }

    /**
     * {@inheritDoc}
     */
    public function getDomain()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDomain', array());

        return parent::getDomain();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserId', array());

        return parent::getUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function first()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'first', array());

        return parent::first();
    }

    /**
     * {@inheritDoc}
     */
    public function isFirst()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isFirst', array());

        return parent::isFirst();
    }

    /**
     * {@inheritDoc}
     */
    public function detailModified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'detailModified', array());

        return parent::detailModified();
    }

    /**
     * {@inheritDoc}
     */
    public function isDetailModified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDetailModified', array());

        return parent::isDetailModified();
    }

    /**
     * {@inheritDoc}
     */
    public function setAutoWithdraw($autoWithdraw)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAutoWithdraw', array($autoWithdraw));

        return parent::setAutoWithdraw($autoWithdraw);
    }

    /**
     * {@inheritDoc}
     */
    public function isAutoWithdraw()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAutoWithdraw', array());

        return parent::isAutoWithdraw();
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrency', array());

        return parent::getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setLevelId($levelId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLevelId', array($levelId));

        return parent::setLevelId($levelId);
    }

    /**
     * {@inheritDoc}
     */
    public function getLevelId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLevelId', array());

        return parent::getLevelId();
    }

    /**
     * {@inheritDoc}
     */
    public function setMerchantWithdrawId($merchantWithdrawId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMerchantWithdrawId', array($merchantWithdrawId));

        return parent::setMerchantWithdrawId($merchantWithdrawId);
    }

    /**
     * {@inheritDoc}
     */
    public function getMerchantWithdrawId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMerchantWithdrawId', array());

        return parent::getMerchantWithdrawId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPreviousId($entryId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreviousId', array($entryId));

        return parent::setPreviousId($entryId);
    }

    /**
     * {@inheritDoc}
     */
    public function getPreviousId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreviousId', array());

        return parent::getPreviousId();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntryId($entryId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntryId', array($entryId));

        return parent::setEntryId($entryId);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntryId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntryId', array());

        return parent::getEntryId();
    }

    /**
     * {@inheritDoc}
     */
    public function getAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAmount', array());

        return parent::getAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function getFee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFee', array());

        return parent::getFee();
    }

    /**
     * {@inheritDoc}
     */
    public function getAduitFee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAduitFee', array());

        return parent::getAduitFee();
    }

    /**
     * {@inheritDoc}
     */
    public function getAduitCharge()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAduitCharge', array());

        return parent::getAduitCharge();
    }

    /**
     * {@inheritDoc}
     */
    public function getDeduction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeduction', array());

        return parent::getDeduction();
    }

    /**
     * {@inheritDoc}
     */
    public function setRealAmount($realAmount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRealAmount', array($realAmount));

        return parent::setRealAmount($realAmount);
    }

    /**
     * {@inheritDoc}
     */
    public function getRealAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRealAmount', array());

        return parent::getRealAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentGatewayFee($paymentGatewayFee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentGatewayFee', array($paymentGatewayFee));

        return parent::setPaymentGatewayFee($paymentGatewayFee);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentGatewayFee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentGatewayFee', array());

        return parent::getPaymentGatewayFee();
    }

    /**
     * {@inheritDoc}
     */
    public function setAutoWithdrawAmount($autoWithdrawAmount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAutoWithdrawAmount', array($autoWithdrawAmount));

        return parent::setAutoWithdrawAmount($autoWithdrawAmount);
    }

    /**
     * {@inheritDoc}
     */
    public function getAutoWithdrawAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAutoWithdrawAmount', array());

        return parent::getAutoWithdrawAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setRate($rate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRate', array($rate));

        return parent::setRate($rate);
    }

    /**
     * {@inheritDoc}
     */
    public function getRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRate', array());

        return parent::getRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setTelephone($telephone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTelephone', array($telephone));

        return parent::setTelephone($telephone);
    }

    /**
     * {@inheritDoc}
     */
    public function getTelephone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelephone', array());

        return parent::getTelephone();
    }

    /**
     * {@inheritDoc}
     */
    public function getIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIp', array());

        return parent::getIp();
    }

    /**
     * {@inheritDoc}
     */
    public function setCheckedUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCheckedUsername', array($username));

        return parent::setCheckedUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getCheckedUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCheckedUsername', array());

        return parent::getCheckedUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccount($account)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccount', array($account));

        return parent::setAccount($account);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccount', array());

        return parent::getAccount();
    }

    /**
     * {@inheritDoc}
     */
    public function setBranch($branch)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBranch', array($branch));

        return parent::setBranch($branch);
    }

    /**
     * {@inheritDoc}
     */
    public function getBranch()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBranch', array());

        return parent::getBranch();
    }

    /**
     * {@inheritDoc}
     */
    public function setNameReal($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNameReal', array($name));

        return parent::setNameReal($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getNameReal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameReal', array());

        return parent::getNameReal();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccountHolder($accountHolder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccountHolder', array($accountHolder));

        return parent::setAccountHolder($accountHolder);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccountHolder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccountHolder', array());

        return parent::getAccountHolder();
    }

    /**
     * {@inheritDoc}
     */
    public function setProvince($province)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProvince', array($province));

        return parent::setProvince($province);
    }

    /**
     * {@inheritDoc}
     */
    public function getProvince()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProvince', array());

        return parent::getProvince();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity($city)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', array($city));

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', array());

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setRefId($refId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRefId', array($refId));

        return parent::setRefId($refId);
    }

    /**
     * {@inheritDoc}
     */
    public function getRefId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRefId', array());

        return parent::getRefId();
    }

    /**
     * {@inheritDoc}
     */
    public function setBankName($bankName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBankName', array($bankName));

        return parent::setBankName($bankName);
    }

    /**
     * {@inheritDoc}
     */
    public function getBankName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBankName', array());

        return parent::getBankName();
    }

    /**
     * {@inheritDoc}
     */
    public function setMemo($memo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMemo', array($memo));

        return parent::setMemo($memo);
    }

    /**
     * {@inheritDoc}
     */
    public function getMemo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMemo', array());

        return parent::getMemo();
    }

    /**
     * {@inheritDoc}
     */
    public function setNote($note)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNote', array($note));

        return parent::setNote($note);
    }

    /**
     * {@inheritDoc}
     */
    public function getNote()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNote', array());

        return parent::getNote();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array());

        return parent::toArray();
    }

}
