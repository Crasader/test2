<?php

namespace Proxies\__CG__\BB\DurianBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PaymentGateway extends \BB\DurianBundle\Entity\PaymentGateway implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'id', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'code', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'name', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'postUrl', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'autoReop', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'reopUrl', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'verifyUrl', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'verifyIp', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'bindIp', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'version', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'paymentMethod', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'paymentVendor', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'bankInfo', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'label', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'removed', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'withdraw', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'hot', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'orderId', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'uploadKey', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'deposit', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'mobile', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'withdrawUrl', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'withdrawHost', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'withdrawTracking', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'randomFloat', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'documentUrl');
        }

        return array('__isInitialized__', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'id', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'code', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'name', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'postUrl', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'autoReop', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'reopUrl', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'verifyUrl', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'verifyIp', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'bindIp', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'version', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'paymentMethod', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'paymentVendor', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'bankInfo', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'label', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'removed', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'withdraw', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'hot', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'orderId', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'uploadKey', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'deposit', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'mobile', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'withdrawUrl', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'withdrawHost', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'withdrawTracking', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'randomFloat', '' . "\0" . 'BB\\DurianBundle\\Entity\\PaymentGateway' . "\0" . 'documentUrl');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PaymentGateway $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', array());

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function getPostUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostUrl', array());

        return parent::getPostUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function isAutoReop()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAutoReop', array());

        return parent::isAutoReop();
    }

    /**
     * {@inheritDoc}
     */
    public function getReopUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReopUrl', array());

        return parent::getReopUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function getVerifyUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVerifyUrl', array());

        return parent::getVerifyUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function getVerifyIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVerifyIp', array());

        return parent::getVerifyIp();
    }

    /**
     * {@inheritDoc}
     */
    public function getVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersion', array());

        return parent::getVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setCode($code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', array($code));

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setPostUrl($postUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPostUrl', array($postUrl));

        return parent::setPostUrl($postUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function setAutoReop($autoReop)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAutoReop', array($autoReop));

        return parent::setAutoReop($autoReop);
    }

    /**
     * {@inheritDoc}
     */
    public function setReopUrl($reopUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReopUrl', array($reopUrl));

        return parent::setReopUrl($reopUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function setVerifyUrl($verifyUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVerifyUrl', array($verifyUrl));

        return parent::setVerifyUrl($verifyUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function setVerifyIp($verifyIp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVerifyIp', array($verifyIp));

        return parent::setVerifyIp($verifyIp);
    }

    /**
     * {@inheritDoc}
     */
    public function bindIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'bindIp', array());

        return parent::bindIp();
    }

    /**
     * {@inheritDoc}
     */
    public function unbindIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unbindIp', array());

        return parent::unbindIp();
    }

    /**
     * {@inheritDoc}
     */
    public function isBindIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isBindIp', array());

        return parent::isBindIp();
    }

    /**
     * {@inheritDoc}
     */
    public function getLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabel', array());

        return parent::getLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function setLabel($label)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLabel', array($label));

        return parent::setLabel($label);
    }

    /**
     * {@inheritDoc}
     */
    public function remove()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'remove', array());

        return parent::remove();
    }

    /**
     * {@inheritDoc}
     */
    public function isRemoved()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isRemoved', array());

        return parent::isRemoved();
    }

    /**
     * {@inheritDoc}
     */
    public function addPaymentMethod(\BB\DurianBundle\Entity\PaymentMethod $method)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPaymentMethod', array($method));

        return parent::addPaymentMethod($method);
    }

    /**
     * {@inheritDoc}
     */
    public function removePaymentMethod(\BB\DurianBundle\Entity\PaymentMethod $method)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePaymentMethod', array($method));

        return parent::removePaymentMethod($method);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentMethod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentMethod', array());

        return parent::getPaymentMethod();
    }

    /**
     * {@inheritDoc}
     */
    public function addPaymentVendor(\BB\DurianBundle\Entity\PaymentVendor $vendor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPaymentVendor', array($vendor));

        return parent::addPaymentVendor($vendor);
    }

    /**
     * {@inheritDoc}
     */
    public function removePaymentVendor(\BB\DurianBundle\Entity\PaymentVendor $vendor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePaymentVendor', array($vendor));

        return parent::removePaymentVendor($vendor);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentVendor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentVendor', array());

        return parent::getPaymentVendor();
    }

    /**
     * {@inheritDoc}
     */
    public function addBankInfo(\BB\DurianBundle\Entity\BankInfo $bankInfo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBankInfo', array($bankInfo));

        return parent::addBankInfo($bankInfo);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBankInfo(\BB\DurianBundle\Entity\BankInfo $bankInfo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBankInfo', array($bankInfo));

        return parent::removeBankInfo($bankInfo);
    }

    /**
     * {@inheritDoc}
     */
    public function getBankInfo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBankInfo', array());

        return parent::getBankInfo();
    }

    /**
     * {@inheritDoc}
     */
    public function isWithdraw()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isWithdraw', array());

        return parent::isWithdraw();
    }

    /**
     * {@inheritDoc}
     */
    public function setWithdraw($withdraw)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWithdraw', array($withdraw));

        return parent::setWithdraw($withdraw);
    }

    /**
     * {@inheritDoc}
     */
    public function setHot($hot)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHot', array($hot));

        return parent::setHot($hot);
    }

    /**
     * {@inheritDoc}
     */
    public function isHot()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isHot', array());

        return parent::isHot();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderId($orderId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderId', array($orderId));

        return parent::setOrderId($orderId);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderId', array());

        return parent::getOrderId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUploadKey($uploadKey)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUploadKey', array($uploadKey));

        return parent::setUploadKey($uploadKey);
    }

    /**
     * {@inheritDoc}
     */
    public function isUploadKey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isUploadKey', array());

        return parent::isUploadKey();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeposit($deposit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeposit', array($deposit));

        return parent::setDeposit($deposit);
    }

    /**
     * {@inheritDoc}
     */
    public function isDeposit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDeposit', array());

        return parent::isDeposit();
    }

    /**
     * {@inheritDoc}
     */
    public function setMobile($mobile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMobile', array($mobile));

        return parent::setMobile($mobile);
    }

    /**
     * {@inheritDoc}
     */
    public function isMobile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isMobile', array());

        return parent::isMobile();
    }

    /**
     * {@inheritDoc}
     */
    public function setWithdrawUrl($withdrawUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWithdrawUrl', array($withdrawUrl));

        return parent::setWithdrawUrl($withdrawUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getWithdrawUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWithdrawUrl', array());

        return parent::getWithdrawUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setWithdrawHost($withdrawHost)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWithdrawHost', array($withdrawHost));

        return parent::setWithdrawHost($withdrawHost);
    }

    /**
     * {@inheritDoc}
     */
    public function getWithdrawHost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWithdrawHost', array());

        return parent::getWithdrawHost();
    }

    /**
     * {@inheritDoc}
     */
    public function setWithdrawTracking($withdrawTracking)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWithdrawTracking', array($withdrawTracking));

        return parent::setWithdrawTracking($withdrawTracking);
    }

    /**
     * {@inheritDoc}
     */
    public function isWithdrawTracking()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isWithdrawTracking', array());

        return parent::isWithdrawTracking();
    }

    /**
     * {@inheritDoc}
     */
    public function setRandomFloat($randomFloat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRandomFloat', array($randomFloat));

        return parent::setRandomFloat($randomFloat);
    }

    /**
     * {@inheritDoc}
     */
    public function isRandomFloat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isRandomFloat', array());

        return parent::isRandomFloat();
    }

    /**
     * {@inheritDoc}
     */
    public function setDocumentUrl($documentUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDocumentUrl', array($documentUrl));

        return parent::setDocumentUrl($documentUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getDocumentUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocumentUrl', array());

        return parent::getDocumentUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array());

        return parent::toArray();
    }

}
