<?php

namespace Proxies\__CG__\BB\DurianBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class RmPlanUser extends \BB\DurianBundle\Entity\RmPlanUser implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'id', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'planId', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'userId', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'username', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'alias', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'modifiedAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'level', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'levelAlias', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'remove', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'cancel', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'recoverFail', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'getBalanceFail', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'curlKue', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'cashBalance', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'cashCurrency', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'cashFakeBalance', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'cashFakeCurrency', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'creditLine', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'errorCode', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'timeoutCount', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'memo', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'version');
        }

        return array('__isInitialized__', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'id', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'planId', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'userId', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'username', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'alias', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'modifiedAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'level', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'levelAlias', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'remove', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'cancel', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'recoverFail', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'getBalanceFail', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'curlKue', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'cashBalance', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'cashCurrency', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'cashFakeBalance', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'cashFakeCurrency', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'creditLine', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'errorCode', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'timeoutCount', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'memo', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlanUser' . "\0" . 'version');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (RmPlanUser $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getPlanId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlanId', array());

        return parent::getPlanId();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserId', array());

        return parent::getUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', array());

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getAlias()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlias', array());

        return parent::getAlias();
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiedAt', array());

        return parent::getModifiedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setModifiedAt($modifiedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifiedAt', array($modifiedAt));

        return parent::setModifiedAt($modifiedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getLevel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLevel', array());

        return parent::getLevel();
    }

    /**
     * {@inheritDoc}
     */
    public function setLevel($level)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLevel', array($level));

        return parent::setLevel($level);
    }

    /**
     * {@inheritDoc}
     */
    public function getLevelAlias()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLevelAlias', array());

        return parent::getLevelAlias();
    }

    /**
     * {@inheritDoc}
     */
    public function setLevelAlias($levelAlias)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLevelAlias', array($levelAlias));

        return parent::setLevelAlias($levelAlias);
    }

    /**
     * {@inheritDoc}
     */
    public function remove()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'remove', array());

        return parent::remove();
    }

    /**
     * {@inheritDoc}
     */
    public function isRemove()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isRemove', array());

        return parent::isRemove();
    }

    /**
     * {@inheritDoc}
     */
    public function cancel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'cancel', array());

        return parent::cancel();
    }

    /**
     * {@inheritDoc}
     */
    public function isCancel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCancel', array());

        return parent::isCancel();
    }

    /**
     * {@inheritDoc}
     */
    public function recoverFail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'recoverFail', array());

        return parent::recoverFail();
    }

    /**
     * {@inheritDoc}
     */
    public function isRecoverFail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isRecoverFail', array());

        return parent::isRecoverFail();
    }

    /**
     * {@inheritDoc}
     */
    public function getBalanceFail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBalanceFail', array());

        return parent::getBalanceFail();
    }

    /**
     * {@inheritDoc}
     */
    public function isGetBalanceFail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isGetBalanceFail', array());

        return parent::isGetBalanceFail();
    }

    /**
     * {@inheritDoc}
     */
    public function curlKue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'curlKue', array());

        return parent::curlKue();
    }

    /**
     * {@inheritDoc}
     */
    public function isCurlKue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCurlKue', array());

        return parent::isCurlKue();
    }

    /**
     * {@inheritDoc}
     */
    public function setCashBalance($balance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCashBalance', array($balance));

        return parent::setCashBalance($balance);
    }

    /**
     * {@inheritDoc}
     */
    public function getCashBalance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCashBalance', array());

        return parent::getCashBalance();
    }

    /**
     * {@inheritDoc}
     */
    public function setCashCurrency($currency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCashCurrency', array($currency));

        return parent::setCashCurrency($currency);
    }

    /**
     * {@inheritDoc}
     */
    public function getCashCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCashCurrency', array());

        return parent::getCashCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function setCashFakeBalance($balance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCashFakeBalance', array($balance));

        return parent::setCashFakeBalance($balance);
    }

    /**
     * {@inheritDoc}
     */
    public function getCashFakeBalance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCashFakeBalance', array());

        return parent::getCashFakeBalance();
    }

    /**
     * {@inheritDoc}
     */
    public function setCashFakeCurrency($currency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCashFakeCurrency', array($currency));

        return parent::setCashFakeCurrency($currency);
    }

    /**
     * {@inheritDoc}
     */
    public function getCashFakeCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCashFakeCurrency', array());

        return parent::getCashFakeCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreditLine($line)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreditLine', array($line));

        return parent::setCreditLine($line);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreditLine()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreditLine', array());

        return parent::getCreditLine();
    }

    /**
     * {@inheritDoc}
     */
    public function setErrorCode($errorCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setErrorCode', array($errorCode));

        return parent::setErrorCode($errorCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getErrorCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getErrorCode', array());

        return parent::getErrorCode();
    }

    /**
     * {@inheritDoc}
     */
    public function getTimeoutCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimeoutCount', array());

        return parent::getTimeoutCount();
    }

    /**
     * {@inheritDoc}
     */
    public function addTimeoutCount($timeoutCount = 1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTimeoutCount', array($timeoutCount));

        return parent::addTimeoutCount($timeoutCount);
    }

    /**
     * {@inheritDoc}
     */
    public function setMemo($memo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMemo', array($memo));

        return parent::setMemo($memo);
    }

    /**
     * {@inheritDoc}
     */
    public function getMemo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMemo', array());

        return parent::getMemo();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array());

        return parent::toArray();
    }

}
