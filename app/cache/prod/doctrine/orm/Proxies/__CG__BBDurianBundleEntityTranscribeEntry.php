<?php

namespace Proxies\__CG__\BB\DurianBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TranscribeEntry extends \BB\DurianBundle\Entity\TranscribeEntry implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'id', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'remitAccountId', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'amount', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'fee', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'method', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'nameReal', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'location', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'blank', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'confirm', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'withdraw', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'deleted', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'creator', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'bookedAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'firstTranscribeAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'transcribeAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'recipientAccountId', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'memo', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'tradeMemo', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'rank', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'remitEntryId', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'username', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'confirmAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'forceConfirm', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'forceOperator', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'updateAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'version');
        }

        return array('__isInitialized__', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'id', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'remitAccountId', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'amount', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'fee', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'method', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'nameReal', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'location', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'blank', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'confirm', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'withdraw', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'deleted', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'creator', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'bookedAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'firstTranscribeAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'transcribeAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'recipientAccountId', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'memo', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'tradeMemo', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'rank', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'remitEntryId', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'username', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'confirmAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'forceConfirm', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'forceOperator', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'updateAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\TranscribeEntry' . "\0" . 'version');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TranscribeEntry $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemitAccountId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemitAccountId', array());

        return parent::getRemitAccountId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemitAccountId($accountId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemitAccountId', array($accountId));

        return parent::setRemitAccountId($accountId);
    }

    /**
     * {@inheritDoc}
     */
    public function getAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAmount', array());

        return parent::getAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setAmount($amount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAmount', array($amount));

        return parent::setAmount($amount);
    }

    /**
     * {@inheritDoc}
     */
    public function getFee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFee', array());

        return parent::getFee();
    }

    /**
     * {@inheritDoc}
     */
    public function setFee($fee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFee', array($fee));

        return parent::setFee($fee);
    }

    /**
     * {@inheritDoc}
     */
    public function getMethod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMethod', array());

        return parent::getMethod();
    }

    /**
     * {@inheritDoc}
     */
    public function setMethod($method)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMethod', array($method));

        return parent::setMethod($method);
    }

    /**
     * {@inheritDoc}
     */
    public function getNameReal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameReal', array());

        return parent::getNameReal();
    }

    /**
     * {@inheritDoc}
     */
    public function setNameReal($nameReal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNameReal', array($nameReal));

        return parent::setNameReal($nameReal);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocation', array());

        return parent::getLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocation($location)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocation', array($location));

        return parent::setLocation($location);
    }

    /**
     * {@inheritDoc}
     */
    public function unBlank()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unBlank', array());

        return parent::unBlank();
    }

    /**
     * {@inheritDoc}
     */
    public function isBlank()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isBlank', array());

        return parent::isBlank();
    }

    /**
     * {@inheritDoc}
     */
    public function confirm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'confirm', array());

        return parent::confirm();
    }

    /**
     * {@inheritDoc}
     */
    public function unConfirm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unConfirm', array());

        return parent::unConfirm();
    }

    /**
     * {@inheritDoc}
     */
    public function isConfirm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isConfirm', array());

        return parent::isConfirm();
    }

    /**
     * {@inheritDoc}
     */
    public function withdraw()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'withdraw', array());

        return parent::withdraw();
    }

    /**
     * {@inheritDoc}
     */
    public function isWithdraw()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isWithdraw', array());

        return parent::isWithdraw();
    }

    /**
     * {@inheritDoc}
     */
    public function deleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'deleted', array());

        return parent::deleted();
    }

    /**
     * {@inheritDoc}
     */
    public function isDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDeleted', array());

        return parent::isDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreator', array());

        return parent::getCreator();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreator($creator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreator', array($creator));

        return parent::setCreator($creator);
    }

    /**
     * {@inheritDoc}
     */
    public function getBookedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBookedAt', array());

        return parent::getBookedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setBookedAt($bookedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBookedAt', array($bookedAt));

        return parent::setBookedAt($bookedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstTranscribeAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstTranscribeAt', array());

        return parent::getFirstTranscribeAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstTranscribeAt($firstTranscribeAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstTranscribeAt', array($firstTranscribeAt));

        return parent::setFirstTranscribeAt($firstTranscribeAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getTranscribeAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTranscribeAt', array());

        return parent::getTranscribeAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setTranscribeAt($transcribeAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTranscribeAt', array($transcribeAt));

        return parent::setTranscribeAt($transcribeAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getRecipientAccountId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRecipientAccountId', array());

        return parent::getRecipientAccountId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRecipientAccountId($recipientAccoundId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRecipientAccountId', array($recipientAccoundId));

        return parent::setRecipientAccountId($recipientAccoundId);
    }

    /**
     * {@inheritDoc}
     */
    public function getMemo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMemo', array());

        return parent::getMemo();
    }

    /**
     * {@inheritDoc}
     */
    public function setMemo($memo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMemo', array($memo));

        return parent::setMemo($memo);
    }

    /**
     * {@inheritDoc}
     */
    public function getTradeMemo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTradeMemo', array());

        return parent::getTradeMemo();
    }

    /**
     * {@inheritDoc}
     */
    public function setTradeMemo($tradeMemo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTradeMemo', array($tradeMemo));

        return parent::setTradeMemo($tradeMemo);
    }

    /**
     * {@inheritDoc}
     */
    public function getRank()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRank', array());

        return parent::getRank();
    }

    /**
     * {@inheritDoc}
     */
    public function setRank($rank)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRank', array($rank));

        return parent::setRank($rank);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersion', array());

        return parent::getVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function getRemitEntryId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemitEntryId', array());

        return parent::getRemitEntryId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemitEntryId($remitEntryId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemitEntryId', array($remitEntryId));

        return parent::setRemitEntryId($remitEntryId);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', array($username));

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', array());

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function forceConfirm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'forceConfirm', array());

        return parent::forceConfirm();
    }

    /**
     * {@inheritDoc}
     */
    public function isForceConfirm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isForceConfirm', array());

        return parent::isForceConfirm();
    }

    /**
     * {@inheritDoc}
     */
    public function setForceOperator($operator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setForceOperator', array($operator));

        return parent::setForceOperator($operator);
    }

    /**
     * {@inheritDoc}
     */
    public function getForceOperator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getForceOperator', array());

        return parent::getForceOperator();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirmAt($at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirmAt', array($at));

        return parent::setConfirmAt($at);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirmAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirmAt', array());

        return parent::getConfirmAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdateAt($at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdateAt', array($at));

        return parent::setUpdateAt($at);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdateAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdateAt', array());

        return parent::getUpdateAt();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array());

        return parent::toArray();
    }

}
