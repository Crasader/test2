<?php

namespace Proxies\__CG__\BB\DurianBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class RmPlan extends \BB\DurianBundle\Entity\RmPlan implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'id', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'creator', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'parentId', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'depth', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'userCreatedAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'lastLogin', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'createdAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'modifiedAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'finishAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'untreated', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'queueDone', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'userCreated', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'confirm', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'cancel', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'finished', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'title', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'memo', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'version');
        }

        return array('__isInitialized__', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'id', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'creator', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'parentId', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'depth', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'userCreatedAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'lastLogin', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'createdAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'modifiedAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'finishAt', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'untreated', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'queueDone', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'userCreated', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'confirm', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'cancel', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'finished', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'title', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'memo', '' . "\0" . 'BB\\DurianBundle\\Entity\\RmPlan' . "\0" . 'version');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (RmPlan $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreator', array());

        return parent::getCreator();
    }

    /**
     * {@inheritDoc}
     */
    public function getParentId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentId', array());

        return parent::getParentId();
    }

    /**
     * {@inheritDoc}
     */
    public function getDepth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepth', array());

        return parent::getDepth();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserCreatedAt', array());

        return parent::getUserCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastLogin', array());

        return parent::getLastLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiedAt', array());

        return parent::getModifiedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setModifiedAt($modifiedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifiedAt', array($modifiedAt));

        return parent::setModifiedAt($modifiedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getFinishAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFinishAt', array());

        return parent::getFinishAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setFinishAt($finishAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFinishAt', array($finishAt));

        return parent::setFinishAt($finishAt);
    }

    /**
     * {@inheritDoc}
     */
    public function isUntreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isUntreated', array());

        return parent::isUntreated();
    }

    /**
     * {@inheritDoc}
     */
    public function isQueueDone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isQueueDone', array());

        return parent::isQueueDone();
    }

    /**
     * {@inheritDoc}
     */
    public function queueDone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'queueDone', array());

        return parent::queueDone();
    }

    /**
     * {@inheritDoc}
     */
    public function isUserCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isUserCreated', array());

        return parent::isUserCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function userCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'userCreated', array());

        return parent::userCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function isConfirm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isConfirm', array());

        return parent::isConfirm();
    }

    /**
     * {@inheritDoc}
     */
    public function confirm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'confirm', array());

        return parent::confirm();
    }

    /**
     * {@inheritDoc}
     */
    public function isCancel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCancel', array());

        return parent::isCancel();
    }

    /**
     * {@inheritDoc}
     */
    public function cancel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'cancel', array());

        return parent::cancel();
    }

    /**
     * {@inheritDoc}
     */
    public function isFinished()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isFinished', array());

        return parent::isFinished();
    }

    /**
     * {@inheritDoc}
     */
    public function finish()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'finish', array());

        return parent::finish();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setMemo($memo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMemo', array($memo));

        return parent::setMemo($memo);
    }

    /**
     * {@inheritDoc}
     */
    public function getMemo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMemo', array());

        return parent::getMemo();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array());

        return parent::toArray();
    }

}
